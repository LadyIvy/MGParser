#!/usr/bin/env ruby
$LOAD_PATH.unshift File.expand_path(File.join(File.dirname(__FILE__), ".", "../lib"))
require 'rubygems'
require 'bundler/setup'
require 'eventmachine'
require 'snmp'
require 'optparse'
require 'ostruct'

require 'call'
require 'optparser'
require 'snmp_gw'

$options = Option.parse(ARGV)
$causes = {"1" => "Unallocated (unassigned) number",
           "2" => "No route to specified transit network (national use)",
           "3" => "No route to destination",
           "4" => "send special information tone",
           "5" => "misdialed trunk prefix (national use)",
           "6" => "channel unacceptable",
           "16" => "Normal hangup (one of the endpoints requested it)", 
           "31" => "Busy",
           "101" =>"Message not compatible with call state"
           }
if $options.list[:logfile]
  if FileTest::exist?($options.list[:logfile])
    data = IO.readlines($options.list[:logfile])
    call = Call.new(data)
  else
    puts "File not found"
  end
else
  module SyslogServer

    def post_init
      puts "Media Gateway is connected!"
    end

    def receive_data(data)
      call = Call.new(data)
    end
  end

  #We initialize eventmachine
  EventMachine::run do
    host = UDPSocket.open {|s| s.connect($options.list[:ipaddr],30000); s.addr.last }
	  port = $options.list[:port]
	  snmpgw = SnmpGw.new($options.list[:port],$options.list[:ipaddr],$options.list[:snmp])
	  EventMachine::open_datagram_socket host, port, SyslogServer
  end
end
