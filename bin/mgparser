#!/usr/bin/env ruby
$LOAD_PATH.unshift File.expand_path(File.join(File.dirname(__FILE__), ".", "../lib"))
require 'rubygems'
require 'bundler/setup'
require 'eventmachine'
require 'snmp'
require 'optparse'
require 'ostruct'

require 'call'
require 'optparser'
require 'snmp_gw'

$options = Option.parse(ARGV)
$causes = {"1" => "Unallocated (unassigned) number",
           "2" => "No route to specified transit network (national use)",
           "3" => "No route to destination",
           "4" => "Send special information tone",
           "5" => "Misdialed trunk prefix (national use)",
           "6" => "Channel unacceptable",
           "7" => "Call awarded, being delivered in an established channel",
           "8" => "Preemption",
           "9" => "Preemption - circuit reserved for reuse",
           "16" => "Normal hangup (one of the endpoints requested it, if not, there are line problems)",
           "17" => "User busy",
           "18" => "No user responding",
           "19" => "No answer from user (user alerted)",
           "20" => "Subscriber absent",
           "21" => "Call rejected",
           "22" => "Number changed",
           "26" => "Non-selected user clearing",
           "27" => "Destination out of order",
           "28" => "Invalid number format (address incomplete)",
           "29" => "Facilities rejected",
           "30" => "Response to STATUS INQUIRY",
           "31" => "Normal unspecified (destination could be busy)",
           "34" => "No circuit/channel available",
           "35" => "Call queued",
           "38" => "Network out of order(check your local ISDN connectionsline and line status)",
           "39" => "Permanent frame mode connection out-of-service",
           "40" => "Permanent frame mode connection operational",
           "41" => "Temporary failure",
           "42" => "Switching equipment congestion",
           "43" => "Access information discarded",
           "44" => "Requested circuit/channel not available",
           "46" => "Precedence call blocked",
           "47" => "Resource unavailable, unspecified",
           "49" => "Quality of service not available",
           "50" => "Requested facility not subscribed",
           "52" => "Outgoing calls barred",
           "53" => "Outgoing calls barred within cug",
           "54" => "Incoming calls barre",
           "55" => "Incoming calls barred within cug",
           "57" => "Bearer capability not authorized",
           "58" => "Bearer capability not presently available",
           "62" => "Inconsistency in outgoing information element",
           "63" => "Service or option not available. unspecified",
           "65" => "Bearer capability not implemented",
           "66" => "Channel type not implemented",
           "69" => "Requested facility not implemented",
           "70" => "Only restricted digital information bearer capability is available",
           "79" => "Service or option not implemented unspecified",
           "81" => "Invalid call reference value",
           "82" => "Identified channel does not exist",
           "83" => "A suspended call exists, but this call identify does not. this cause indicates that a call resume has been attempted with a call identity which differs from that in use for any presently suspended call(s)",
           "84" => "Call identity in use",
           "85" => "No call suspended",
           "86" => "Call having the requested call identity has been cleared",
           "87" => "User not a member of cug",
           "88" => "Incompatible destination",
           "90" => "Non-existent cug",
           "91" => "Invalid transit network selection (national use)",
           "95" => "Invalid message, unspecified",
           "96" => "Mandatory information element is missing",
           "97" => "Message type non-existent or not implemented",
           "98" => "Message not compatible with call state or message type non-existent",
           "99" => "Information element / parameter non-existent or not implemented",
           "100" => "Invalid information element contents",
           "101" => "Message not compatible with call state",
           "102" => "Recovery on timer expiry",
           "103" => "Parameter non-existent or not implemented - passed on (national use)",
           "110" => "Message with unrecognized parameter discarded",
           "111" => "Protocol error, unspecified",
           "127" => "Intel-working, unspecified"
           }
           
if $options.list[:logfile]
  if FileTest::exist?($options.list[:logfile])
    data = IO.readlines($options.list[:logfile])
    call = Call.new(data)
  else
    puts "File not found"
  end
else
  module SyslogServer

    def post_init
      puts "Media Gateway is connected!"
    end

    def receive_data(data)
      call = Call.new(data)
    end
  end

  #We initialize eventmachine
  EventMachine::run do
    host = UDPSocket.open {|s| s.connect($options.list[:ipaddr],30000); s.addr.last }
	  port = $options.list[:port]
	  snmpgw = SnmpGw.new($options.list[:port],$options.list[:ipaddr],$options.list[:snmp])
	  EventMachine::open_datagram_socket host, port, SyslogServer
  end
end
